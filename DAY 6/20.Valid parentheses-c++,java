class Solution {
public:
    bool isValid(string s) {
    stack<char> p;
    for(auto ch : s)
    {
        if(ch == '(' || ch == '{' || ch == '[') 
            p.push(ch);
        else{
            if(p.empty()) return false;
            if(ch == ')')if(p.top() == '(') p.pop(); 
            else 
                return false;
            if(ch == ']')if(p.top() == '[') p.pop(); 
            else 
                return false;
            if(ch == '}')if(p.top() == '{') p.pop(); 
            else 
                return false;
        }}
        if(p.empty()) return true;
        return 0;
      
}  
};

class Solution {
    public boolean isValid(String s) {
        Stack<Character> st = new Stack<Character>();
        for(char c : s.toCharArray()){
            if(c == '(') st.push(')');
            else if(c == '[') st.push(']');
            else if(c == '{') st.push('}');
            else if(st.isEmpty() || st.pop() != c)
                return false;
        }
        return st.isEmpty();
    }
}
